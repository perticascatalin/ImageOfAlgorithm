Journal Scope

SPECIAL ISSUE ON: New Innovations in Machine Learning and Software Science (NEMLSS)

- End-user programming environment,

- Semi-supervised learning, transfer learning and domain adaptation.

- Deep learning technologies in advanced software systems

- Granular computation in software systems ++++

- User-centered Adoption-Centric Reengineering techniques.

- Ontology, cognitive models and philosophical aspects on software design. ++++

- Medical Informatics, Software methods and application for biomedicine.ã€€

- Artificial Intelligence Techniques on Software Engineering. ++++

- Intelligent decision support systems and consensus

- Big data software and applications in smart energy, smart business and smart cities.

Bipin
---------------
Abstract - DONE
Goal - DONE
Narrative

Catalin
---------------
State of the Art - DONE

Subject in Context - ALMOST DONE
	- Programming Education - DONE (well covered in motivation)

	- Program Induction - DONE, needs figure
		- Program Induction Background section in Overleaf

	- Dynamics of Complex Behavior - DONE
		- Cellular Automata - done
		- Finite State Machines - not done, check Turing Rnn paper
		- Turing Complete RNNs - pitched in Related work
		- Conceptors - ptiched in Related work

	- Relating Debugging/Programming  - DONE
		- with an intelligent agent watching traces - done

	- Blending Patterns (hybrid) - [DOING in future app]
		- Conceptors - pitched in Applications
		- Texture and Content - pitched in Applications


Experiments Comparisons

	- Analysis of Results (4 points)
		- local patterns emulation 
		- trend patterns
		- good abstraction
		- error cumulation
	- The 4 points of analysis - done
	- Experiments from other papers
		- NTM,DNC comparison - done
		- PtrNet,RPWNet comparison - done
		- basic problem comparison

	LEFT TODOs

	- Final overall accuracy to Trace Generator Experiment
	- Evaluation of SIP (next swap acc vs overall vs order at end)
	- Explain Table with results
	

For some other time

	- Why the problem is so hard (in increasing order, an analysis)
		- comparison operator
		- sum aggregator
		- sorting
		- swapping, pointers
		- recognize
		- detect
		- behaving like a sorting algorithm

Highlights & Conclusions
	- C left 2 comments in conclusions - DONE
	- Highlight exactly the steps in the proposal - DONE
	- Conclusions need to show added value to the field - DONE
	- Conclusions should be relevant and convincing - DONE
	

TODOs
---------------

- experiment comparisons - urgent to do - 4h/4h
- address your own feedback - 2h
- work on conclusions - 4h/4h
- re-read bibliography - 2h/2h
- re-read end-to-end tatatatam 2h/2h

- integrate Program Induction part - 2h/2h - DONE

- finished state of the art - DONE
- subject in context (4h/4h) - DONE
- work on highlights - 2h/2h - DONE
- finish answers (make blue, yellow and red text in Answer GD) - 2h/2h - DONE

- experimental part /2h

Total: 22h/24h (after plan made and first revision 2 weeks, currently in second revision third week)


Neural Program vs. Cellular Automata - started in graphical review, discussed in related work

Related work (state of art and subject in context) initial plan
================================

SA 1: Program Induction

Many papers, check Google Doc. It also provides considerable background in this field.

SA 2: Hybrid methods

Controlling recurrent networks with conceptors.
From mathematical patterns (chaotic attractors) to movement patterns.

A neural algorithm of artistic style.
Combining texture and content paper.

SA 3: Complex Dynamical Behavior

Related Work starting point quote: "Our classification experiments are performed both on specific classes of programs, as well as family of programs. From this point of view, it is conceptually related to iss ues discussed in [14] (concepts for dynamic patterns) and [15] (behavior of cellular automata)."
================================
